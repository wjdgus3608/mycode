
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.*;
import java.util.stream.Collectors;


public class Main {
	static int N, ret1, ret2=Integer.MAX_VALUE;
	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st=new StringTokenizer(br.readLine());
		
		N = Integer.parseInt(st.nextToken());
		int[][] arr = new int[N][3];
		for(int k=0; k<N; k++) {
			st = new StringTokenizer(br.readLine()," ");
			for(int i=0; i<3; i++) {
				arr[k][i] = Integer.parseInt(st.nextToken());
			}
		}
		
		int[][] dp = new int[N][3];
		
		dp[0][0] = arr[0][0];
		dp[0][1] = arr[0][1];
		dp[0][2] = arr[0][2];
		for(int i=1; i<N; i++) {
			dp[i][0] = Math.max(dp[i-1][0], dp[i-1][1]) +arr[i][0];
			dp[i][1] = Math.max(Math.max(dp[i-1][0], dp[i-1][1]), dp[i-1][2]) + arr[i][1];
			dp[i][2] = Math.max(dp[i-1][1], dp[i-1][2]) + arr[i][2];
		}
		
		ret1 = Math.max(dp[N-1][0],Math.max(dp[N-1][1], dp[N-1][2]));
		
		dp[0][0] = arr[0][0];
		dp[0][1] = arr[0][1];
		dp[0][2] = arr[0][2];
		for(int i=1; i<N; i++) {
			dp[i][0] = Math.min(dp[i-1][0], dp[i-1][1]) +arr[i][0];
			dp[i][1] = Math.min(Math.min(dp[i-1][0], dp[i-1][1]), dp[i-1][2]) + arr[i][1];
			dp[i][2] = Math.min(dp[i-1][1], dp[i-1][2]) + arr[i][2];
		}
		
		ret2 = Math.min(dp[N-1][0],Math.min(dp[N-1][1], dp[N-1][2]));
		
		System.out.print(ret1 + " "+ ret2);
		
	}
}

